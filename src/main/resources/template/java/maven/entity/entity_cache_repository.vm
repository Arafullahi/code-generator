#set($entityGivenName=${ENTITY.getName()})
#set($entityStorePolicy=${ENTITY.getStorePolicy()})
#set($entityName=${ENTITY.getName().toLowerCase()})
#set($entityStorePolicy=${ENTITY.getStorePolicy()})
#set($storedEntity = ${entityStorePolicy.isAvailable()})
#set($idFieldName = $ENTITY.getIdField().getObject().getName())
#set($idFieldType = $ENTITY.getIdField().getObject().getFQN())
#set($storeEssentials = $StoreUtils.essential(${entityStorePolicy.policy.storeName.storeType}))


package $DEFAULT__ENTITY_REPO_DIRECTORY.value;


import org.ibs.cds.gode.entity.cache.repo.CacheableRepository;
import ${DEFAULT__ENTITY_TYPE_DIRECTORY.value}.$entityGivenName;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.Optional;

@Service
public class ${entityGivenName}CacheRepository extends CacheableRepository<${entityGivenName},$idFieldType,${entityGivenName}CacheRepo> {

    @Autowired
    public ${entityGivenName}CacheRepository(${entityGivenName}CacheRepo repo) {
        super(repo);
    }

    @Override
    public Optional<${entityGivenName}> findByAppId(Long appId) {
        return Optional.empty();
    }
}
