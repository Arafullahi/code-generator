#set($entityGivenName=${ENTITY.getName()})
#set($entityName=${ENTITY.getName().toLowerCase()})
#set($entityStorePolicy=${ENTITY.getStorePolicy()})
#set($storedEntity = ${entityStorePolicy.isAvailable()})
#set($idFieldName = $ENTITY.getIdField().getObject().getName())
#set($idFieldType = $ENTITY.getIdField().getObject().getFQN())
#if($storedEntity)
    #set($storeType = ${entityStorePolicy.policy.storeName.storeType})
    #set($storeEssentials = ${StoreUtils.essential($storeType)})
#end

package $DEFAULT__ENTITY_TYPE_DIRECTORY.value;

import lombok.Data;
#if($storedEntity)
import ${storeEssentials.entityAnnotation.fqn()};
import $storeEssentials.entityType.fqn();
import $storeEssentials.idAnnotation.fqn();
#else
import org.ibs.cds.gode.entity.view.EntityView;
#end



#if($storedEntity)
@$storeEssentials.entityAnnotation.name
#end
#if(${storeEssentials.isMongo()})
@org.mongodb.morphia.annotations.Entity
#end
@Data
#if($storedEntity)
    public class $entityGivenName extends $storeEssentials.entityType.name<$idFieldType>
#else
    public class $entityGivenName extends EntityView<$idFieldType>
#end
{

    private @$storeEssentials.idAnnotation.name $idFieldType $idFieldName;
    #foreach($field in $ENTITY.fields)
        #set($fieldName = $field.getObject().getName())
        #set($fieldType = $field.getObject().getFQN())
    private $fieldType $fieldName;
    #end

    public $idFieldType getId(){
        return $idFieldName;
    }

    public void setId($idFieldType $idFieldName){
        this.$idFieldName = $idFieldName;
    }
}
