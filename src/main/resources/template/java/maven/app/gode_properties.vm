#set($appName=${APP.getName().toLowerCase()})
#set($appVersion=${APP.getVersion()})
#set($storeRequirement=${DeploymentRequirement.getStoreRequirements($APP)})

#if($storeRequirement.containsKey($StoreType.valueOf("JPA")))
gode.datastore.jpa.enabled=true
gode.datastore.jpa.driver=
gode.datastore.jpa.dialect=
gode.datastore.jpa.datasource.url=
gode.datastore.jpa.datasource.username=
gode.datastore.jpa.datasource.password=
gode.datastore.jpa.datasource.auto-schema-management=update
#else
gode.datastore.jpa.enabled=false
#end


#if($storeRequirement.containsKey($StoreType.valueOf("MONGODB")))
gode.datastore.mongodb.enabled=true
gode.datastore.mongodb.uri=
gode.datastore.mongodb.database.name=
#else
gode.datastore.mongodb.enabled=false
#end

#if($storeRequirement.containsKey($StoreType.valueOf("CASSANDRA")))
gode.datastore.cassandra.enabled=true
gode.datastore.cassandra.contact-points=
gode.datastore.cassandra.port=
gode.datastore.cassandra.username=
gode.datastore.cassandra.password=
gode.datastore.cassandra.keyspace=default
gode.datastore.cassandra.schema-action=NONE
#else
gode.datastore.cassandra.enabled=false
#end

#if(${APP.systemQueue} || $DeploymentRequirement.isQueueManagerNeeded($storeRequirement))
gode.queue.kafka.enabled=true
gode.queue.general=
gode.queue.kafka.servers=
gode.queue.kafka.groupId=
gode.queue.kafka.acknowledgement=all
gode.queue.kafka.retries=3
gode.queue.kafka.batchSizeConfig=16384
gode.queue.kafka.linger=1
gode.queue.kafka.bufferMemoryConfig=33554432
gode.queue.kafka.autoCommit=true
gode.queue.kafka.autoCommitInterval=1000
gode.queue.kafka.offsetReset=earliest
gode.queue.kafka.sesssionTimeout=30000
gode.queue.kafka.pollInterval=60
gode.queue.kafka.security.sasl=
gode.queue.kafka.security.mechanism=
gode.queue.kafka.security.jaas=
#else
gode.queue.kafka.enabled=false
#end


#if(${APP.secure})
gode.security.jwt.public-key= classpath:public.txt
gode.security.enabled=true
#else
gode.security.enabled=false
#end



#if($DeploymentRequirement.isCacheNeeded($storeRequirement))
gode.cache.ignite.enabled=true
gode.cache.ignite.name=${appName}cache
gode.cache.ignite.persistence=true
gode.cache.ignite.connector.port=11211
gode.cache.ignite.persistence.pagesize=4096
gode.cache.ignite.connector.discovery.addr=127.0.0.1:47500..47509
gode.cache.ignite.metrics.log.frequency=0
gode.cache.ignite.dataregion.size.start=100000000
gode.cache.ignite.dataregion.size.max=200000000
gode.cache.ignite.threads.pool.query=2
gode.cache.ignite.threads.pool.datastreamer=1
gode.cache.ignite.threads.pool.management=2
gode.cache.ignite.threads.pool.public=2
gode.cache.ignite.threads.pool.system=2
gode.cache.ignite.threads.pool.rebalance=1
gode.cache.ignite.threads.pool.asynccallback=2
#else
gode.cache.ignite.enabled=false
#end

server.port=

management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

gode.security.token.access.expiry=
gode.security.token.refresh.expiry=
gode.security.token.salt=

spring.application.name=${appName}-v.$appVersion
spring.boot.admin.client.url=${admin.url}
management.endpoint.logfile.external-file=./logs/${appName}.log
