#set($relationship=${RELATIONSHIP.getName()})
#set($relationship_lc=${RELATIONSHIP.getName().toLowerCase()})
#set($relationshipView=${RELATIONSHIP.viewName})
#set($relationshipType = ${RELATIONSHIP.type})
#set($relationshipEssentials = ${RelationshipUtils.essential($storeType, $relationshipType)})
#set($viewPackage=${DEFAULT__ENTITY_VIEW_DIRECTORY.value})
#set($startNode = ${RELATIONSHIP.startNode})
#set($endNode = ${RELATIONSHIP.endNode})

package ${DEFAULT__ENTITY_CONTROLLER_DIRECTORY.value};

import ${DEFAULT__ENTITY_MANAGER_DIRECTORY.value}.${relationship}Manager;
import ${DEFAULT__ENTITY_TYPE_DIRECTORY.value}.${relationship};
import ${DEFAULT__ENTITY_VIEW_DIRECTORY.value}.${relationshipView};
import ${DEFAULT__ENTITY_VIEW_DIRECTORY.value}.${startNode.entityViewName};
import ${DEFAULT__ENTITY_VIEW_DIRECTORY.value}.${endNode.entityViewName};
import io.swagger.annotations.Api;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;

@Relationship
@Api(tags = {"${relationship}"})
@RequestMapping(value= "/gode/relationship/${relationship_lc}", produces = "application/json;charset=UTF-8")
public class ${relationship}StateController extends ${relationshipEssentials.controller.fqn()}<${relationshipView},${relationship},${relationship}Manager,$startNode.entityViewName,$endNode.entityViewName, $startNode.idField.object.getFQN(),$endNode.idField.object.getFQN() > {

    @Autowired
    public ${relationship}StateController(${relationship}Manager manager) {
        super(manager);
    }
}
